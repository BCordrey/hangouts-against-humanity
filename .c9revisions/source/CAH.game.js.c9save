{"ts":1357658047696,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"gameStarted = false;\r\nnumPlayers = 0;\r\nreader = new Object();\r\nreaderIndex = 0;\r\nnumSubmissions = 0;\r\nnumRevealedSubmissions = 0;\r\nwinningPoints = 0;\r\nfirstCardSelected = false;\r\nsecondCardSelected = false;\r\nthirdCardSelected = false;\r\noverlay = false;\r\nmasterCardsPicked = new Array();\r\n\r\nfunction startGame() {\r\n    //start game\r\n    if (playerStore.count() < 3) {\r\n        gapi.hangout.layout.displayNotice(\"You need at least 3 people to play.\");\r\n    }\r\n    else {\r\n        //present game options\r\n        optionsWindow = Ext.create('Ext.window.Window', {\r\n            title:'Game Options', id:'optionsWindow',\r\n            width:450,\r\n            height:200,\r\n            autoShow: true,\r\n            modal: true,\r\n            collapsible: false,\r\n            resizable: false,\r\n            shadow:false,\r\n            items: [\r\n                {\r\n                    xtype: 'checkboxgroup',\r\n                    id: 'setGroup',\r\n                    fieldLabel: 'Sets',\r\n                    labelWidth: 35,\r\n                    // Arrange checkboxes into two columns, distributed vertically\r\n                    columns: 3,\r\n                    columnWidth:  240,\r\n                    vertical: false,\r\n                    items: [\r\n                        { boxLabel: 'Base', name: 'sets', inputValue: 'Base', checked: true, readOnly:true },\r\n                        { boxLabel: 'First Expansion', name: 'sets', checked: true, inputValue: 'CAHe1'},\r\n                        { boxLabel: 'Second Expansion', name: 'sets', checked: true, inputValue: 'CAHe2' },\r\n                        { boxLabel: 'Christmas Set', name: 'sets', checked: false, inputValue: 'CAHxmas' },\r\n                        { boxLabel: 'Grognards (fan RPG set)', name: 'sets', checked: false, inputValue: 'CAHgrognards' },\r\n                        { boxLabel: 'Weeaboo (fan Anime set)', name: 'sets', checked: false, inputValue: 'CAHweeaboo' }\r\n\r\n                    ]\r\n                },\r\n                {\r\n                    id:'winningPoints',\r\n                    xtype:'numberfield',\r\n                    fieldLabel:'Points',\r\n                    labelWidth:40,\r\n                    width:100,\r\n                    value:7,\r\n                    maxValue:20,\r\n                    minValue:1\r\n                }\r\n            ],\r\n            buttons: [\r\n                {\r\n                    text: 'Start Game',\r\n                    handler: function () {\r\n                        if (!gameStarted) {\r\n                            var eventData = new Object();\r\n                            eventData.winningPoints = Ext.getCmp('winningPoints').getValue();\r\n                            eventData.sets = Ext.getCmp('setGroup').getValue();\r\n                            eventData.gameStarter = user.name;\r\n                            eventData.sender = user.id;\r\n                            sendEvent('startedGame', eventData);\r\n\r\n                            gapi.hangout.data.setValue('winningPoints', Ext.getCmp('winningPoints').getValue().toString());\r\n                            gapi.hangout.data.setValue('sets',JSON.stringify(Ext.getCmp('setGroup').getValue()));\r\n                            gapi.hangout.data.setValue('masterCardsPicked', \"\");\r\n                        }\r\n\r\n                        this.up('window').close();\r\n                    }\r\n                },\r\n                {\r\n                    text: 'Cancel',\r\n                    handler: function () {\r\n                        this.up('window').close();\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n    }\r\n}\r\n\r\nfunction startedGame(eventData){\r\n    //notification\r\n    gapi.hangout.layout.displayNotice(eventData.gameStarter + \" started the game!\");\r\n\r\n    //clear points\r\n    clearPoints();\r\n\r\n    //number of players\r\n    numPlayers = playerStore.count();\r\n\r\n    //winningPoints\r\n    winningPoints = eventData.winningPoints;\r\n\r\n    //game is ongoing\r\n    gameStarted = true;\r\n\r\n    //reposition video feed\r\n    resetVideoWindow();\r\n    //clear overlay\r\n    if (overlay) {\r\n        overlay.dispose();\r\n    }\r\n\r\n    //disable start game button\r\n    Ext.getCmp('startGameButton').hide();\r\n    Ext.getCmp('goalDisplay').setValue(winningPoints);\r\n    Ext.getCmp('goalDisplay').show();\r\n\r\n    //initialize decks\r\n    initDecks(eventData.sets);\r\n\r\n    //person who started the game randomly chooses reader,sends out cards\r\n    if (eventData.sender == user.id) {\r\n        chooseRandomReader();\r\n    }\r\n}\r\n///////////////////////////////////////////////////////\r\n//\r\n// MAIN GAME LOOP\r\n//\r\n///////////////////////////////////////////////////////\r\nfunction doReaderTurn() {\r\n    numPlayers = playerStore.count();\r\n\r\n    if (reader.id == user.id) {\r\n        dealAnswers(10);\r\n\r\n        numSubmissions = 0;\r\n        numRevealedSubmissions = 0;\r\n\r\n        //disable hand for reader\r\n        disableReaderHand();\r\n\r\n        //increment turn counter for everyone\r\n        var curTurn = Ext.getCmp('turnCounter').getValue()+1;\r\n        gapi.hangout.data.setValue('turn', curTurn.toString());\r\n        sendEvent('incrementTurnCounter');\r\n\r\n        //deal question card and get number of answers\r\n        var numAnswers = dealQuestionCard();\r\n\r\n        //allow answers to be submitted\r\n        var eventData = new Object();\r\n        eventData.numAnswers = numAnswers;\r\n        sendEvent('allowSubmissions', eventData);\r\n\r\n        //wait until all players have submitted\r\n        var numLoops = 0;\r\n        var sLoop = setInterval(function () {checkSubmission();},1000);\r\n\r\n        function checkSubmission()\r\n        {\r\n            numLoops++;\r\n            //all submission in or 3 minutes passed (in case of a drop)\r\n            Ext.getCmp('gameStatePanel').setTitle(\"Round Timer:\" + (120-numLoops) + \" seconds\");\r\n            if (numSubmissions == numPlayers-1 || numLoops > 120) {\r\n                clearInterval(sLoop);\r\n                Ext.getCmp('gameStatePanel').setTitle(\"Game State\");\r\n                revealCards();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//other game functions\r\nfunction incrementTurnCounter(){\r\n    Ext.getCmp('turnCounter').setValue(Ext.getCmp('turnCounter').getValue()+1);\r\n}\r\n\r\nfunction clearPoints() {\r\n    playerStore.each(function(record) {\r\n        record.set('points', 0);\r\n    });\r\n}\r\n\r\nfunction chooseRandomReader() {\r\n    readerIndex = Math.ceil(numPlayers*Math.random())-1;\r\n    reader = playerStore.getAt(readerIndex).getData();\r\n    var eventData = new Object();\r\n    eventData.reader = reader;\r\n    eventData.readerIndex = readerIndex;\r\n    sendEvent('setReader',eventData);\r\n\r\n    //to set initial card counts\r\n    removeCardsFromHand();\r\n\r\n}\r\nfunction setReader(eventData) {\r\n    reader = eventData.reader;\r\n    readerIndex = eventData.readerIndex;\r\n    gapi.hangout.layout.displayNotice(reader.name + \" is the Card Czar for this turn!\");\r\n    var readerFeed = gapi.hangout.layout.createParticipantVideoFeed(reader.participantID);\r\n    videoCanvas.setVideoFeed(readerFeed);\r\n    readerVideoWindow.setTitle('Card Czar: ' + reader.name);\r\n    //reset card selection variables\r\n    firstCardSelected = false;\r\n    secondCardSelected = false;\r\n    thirdCardSelected = false;\r\n    //advance turn\r\n    if (user.id == reader.id) {\r\n        doReaderTurn();\r\n    }\r\n}\r\n\r\nfunction disableReaderHand() {\r\n    Ext.getCmp('handArea').collapse();\r\n}\r\n\r\nfunction enableReaderHand() {\r\n    Ext.getCmp('handArea').expand();\r\n}\r\n\r\nfunction initDecks(setsData) {\r\n    console.log(setsData.sets);\r\n    var thisGameCards = new Array();\r\n    console.log(masterCards.length);\r\n    console.log(thisGameCards.length);\r\n    for (var i in masterCards) {\r\n        console.log($.inArray(masterCards[i].expansion,setsData.sets));\r\n        if ($.inArray(masterCards[i].expansion,setsData.sets) > -1) {\r\n            thisGameCards.push(masterCards[i]);\r\n        }\r\n    }\r\n    console.log(\"after\");\r\n    console.log(masterCards.length);\r\n    console.log(thisGameCards.length);\r\n\r\n    //master questions store\r\n    masterQuestionStore = Ext.create('Ext.data.Store', {\r\n        storeId:'masterQuestionStore',\r\n        fields:['id', 'text', 'numAnswers', 'cardType'],\r\n        data: thisGameCards,\r\n        filters: [\r\n            {\r\n                property: 'cardType',\r\n                value: /Q/\r\n            }\r\n        ]\r\n    });\r\n\r\n    //master answers store\r\n    masterAnswerStore = Ext.create('Ext.data.Store', {\r\n        storeId:'masterAnswerStore',\r\n        fields:['id', 'text', 'cardType'],\r\n        data: thisGameCards,\r\n        filters: [\r\n            {\r\n                property: 'cardType',\r\n                value: /A/\r\n            }\r\n        ]\r\n    });\r\n\r\n    //remaining questions store aka deck\r\n    remainingQuestionStore = Ext.create('Ext.data.Store', {\r\n        storeId:'remainingQuestionStore',\r\n        fields:['id', 'text', 'numAnswers', 'cardType'],\r\n        data: thisGameCards,\r\n        filters: [\r\n            {\r\n                property: 'cardType',\r\n                value: /Q/\r\n            }\r\n        ]\r\n    });\r\n\r\n    //remaining answers store aka deck\r\n    remainingAnswerStore = Ext.create('Ext.data.Store', {\r\n        storeId:'remainingAnswerStore',\r\n        fields:['id', 'text', 'cardType'],\r\n        data: thisGameCards,\r\n        filters: [\r\n            {\r\n                property: 'cardType',\r\n                value: /A/\r\n            }\r\n        ]\r\n    });\r\n\r\n\r\n}\r\n\r\nfunction dealAnswers(handSize) {\r\n    var cardIndexesPicked = new Array();\r\n    var masterCardsString = gapi.hangout.data.getValue('masterCardsPicked');\r\n    if (masterCardsString != \"\") {\r\n        masterCardsPicked = masterCardsString.split(',');\r\n    }\r\n\r\n    playerStore.each(function(playerRec){\r\n        //check number of cards and draw up to handsize\r\n        var numCardsNeeded = handSize - playerRec.getData().cardsInHand;\r\n        if (numCardsNeeded > 0 && playerRec.getData().id != reader.id) {\r\n            console.log(\"Detected \"+playerRec.getData().name+\" needs \" + numCardsNeeded + \" cards (draw up to \"+handSize+\") Had \"+ playerRec.getData().cardsInHand+ \" cards\");\r\n            //pick numCards\r\n            var pickedCards = new Array();\r\n            for (var i=1;i<=numCardsNeeded;i++) {\r\n                var cardIndex = Math.ceil(remainingAnswerStore.count()*Math.random())-1;\r\n                while ($.inArray(cardIndex,cardIndexesPicked) !==-1) {\r\n                    cardIndex = Math.ceil(remainingAnswerStore.count()*Math.random())-1;\r\n                }\r\n                var cardRec = remainingAnswerStore.getAt(cardIndex);\r\n                pickedCards.push(cardRec.getData().id);\r\n                cardIndexesPicked.push(cardIndex);\r\n                masterCardsPicked.push(cardIndex);\r\n            }\r\n            //send draw event to player client\r\n            var eventData = new Object();\r\n            eventData.playerID = playerRec.getData().id;\r\n            eventData.cardsDrawn = pickedCards;\r\n            sendEvent('drawAnswers',eventData);\r\n            console.log(playerRec.getData().name + \" \" + pickedCards.toString());\r\n        }\r\n    });\r\n    console.log(cardIndexesPicked.toString());\r\n    gapi.hangout.data.setValue('masterCardsPicked', masterCardsPicked.toString());\r\n}\r\n\r\nfunction drawAnswers(eventData) {\r\n    if (eventData.playerID == user.id) {\r\n        console.log(\"drawing cards:\"+eventData.cardsDrawn.toString());\r\n    }\r\n\r\n    //loop through cards drawn by everyone\r\n    for (var i=0;i<eventData.cardsDrawn.length;i++) {\r\n        var cardRec = remainingAnswerStore.findRecord('id', eventData.cardsDrawn[i], 0, false, false, true);\r\n\r\n        //add to your client if you drew them\r\n        if (eventData.playerID == user.id) {\r\n            $('#handArea-body').append('<div class=\"myCardWrap\" style=\"float:left;\"><div id=\"'+cardRec.getData().id+'\" class=\"whitecard card\"><div class=\"cardtext\">'+cardRec.getData().text+'</div></div></div>');\r\n        }\r\n        //remove cards from deck since dealer already removed\r\n        remainingAnswerStore.remove(cardRec);\r\n    }\r\n}\r\n\r\nfunction dealQuestionCard() {\r\n    var cardIndex = Math.ceil(remainingQuestionStore.count()*Math.random())-1;\r\n    var cardRec = remainingQuestionStore.getAt(cardIndex);\r\n    var pickedCard = cardRec.getData().id;\r\n\r\n    var masterCardsString = gapi.hangout.data.getValue('masterCardsPicked');\r\n    if (masterCardsString != \"\") {\r\n        masterCardsPicked = masterCardsString.split(',');\r\n    }\r\n\r\n    masterCardsPicked.push(pickedCard);\r\n    gapi.hangout.data.setValue('masterCardsPicked', masterCardsPicked.toString());\r\n\r\n    //send draw event to player client\r\n    var eventData = new Object();\r\n    eventData.playerID = user.id;\r\n    eventData.cardDrawn = pickedCard;\r\n\r\n    sendEvent('drawQuestion',eventData);\r\n    return cardRec.getData().numAnswers;\r\n}\r\n\r\nfunction drawQuestion(eventData) {\r\n    var cardRec = remainingQuestionStore.findRecord('id', eventData.cardDrawn, 0, false, false, true);\r\n    var cardText = cardRec.getData().text;\r\n    cardText = cardText.replace(/_/g,'______');\r\n\r\n    //add to your client if you drew them\r\n    $('#sharedArea-body').append('<div class=\"blackcard card\"><div class=\"cardtext\">'+cardText+'</div></div>');\r\n    if (cardRec.getData().numAnswers == 2) {\r\n        $('.blackcard').addClass('pick2');\r\n    }\r\n    else if (cardRec.getData().numAnswers == 3) {\r\n        $('.blackcard').addClass('pick3');\r\n    }\r\n\r\n     //remove card from deck\r\n    remainingQuestionStore.remove(cardRec);\r\n\r\n    //if question card draws 2, reader deals out 2 to each player\r\n    if (user.id == reader.id) {\r\n        if (cardRec.getData().numAnswers == 3) {\r\n            //dealAnswers(12);\r\n            //TODO: deal up to 12, issue is timing as main loop keeps going\r\n        }\r\n    }\r\n}\r\n\r\nfunction allowSubmissions(eventData) {\r\n    if (user.id != reader.id) {\r\n        $('.whitecard').click(function() {\r\n\r\n            if ($(this).hasClass('cardSelected')) {\r\n                //de-select\r\n                if ($(this).hasClass('firstCardSelected')) {\r\n                    firstCardSelected = false;\r\n                }\r\n                if ($(this).hasClass('secondCardSelected')) {\r\n                    secondCardSelected = false;\r\n                }\r\n                if ($(this).hasClass('firstCardSelected')) {\r\n                    thirdCardSelected = false;\r\n                }\r\n                $(this).removeClass('firstCardSelected secondCardSelected thirdCardSelected cardSelected');\r\n                $('.answerButton').remove();\r\n            }\r\n            else {\r\n                //select card\r\n                if (!firstCardSelected) {\r\n                    $(this).addClass('firstCardSelected cardSelected');\r\n                    firstCardSelected = true;\r\n                }\r\n                else if (!secondCardSelected && eventData.numAnswers >= 2) {\r\n                    $(this).addClass('secondCardSelected cardSelected');\r\n                    secondCardSelected = true;\r\n                }\r\n                else if (!thirdCardSelected && eventData.numAnswers == 3) {\r\n                    $(this).addClass('thirdCardSelected cardSelected');\r\n                    thirdCardSelected = true;\r\n                }\r\n            }\r\n\r\n            //num of selected = submissions needed\r\n            if (eventData.numAnswers ==  $('.cardSelected').length && $(this).hasClass('cardSelected')) {\r\n                //add UI and button\r\n                $(this).parent().append('<button id=\"submitAnswerButton\" class=\"answerButton\" type=\"button\">Submit!</button>');\r\n\r\n                //event handler\r\n                $('#submitAnswerButton').click(function() {\r\n                    var submitData = new Object();\r\n                    submitData.numAnswers = eventData.numAnswers;\r\n                    submitData.answer =  $('.firstCardSelected').attr('id');\r\n                    if (eventData.numAnswers >= 2) {\r\n                        submitData.answer2 =  $('.secondCardSelected').attr('id');\r\n                    }\r\n                    if (eventData.numAnswers == 3) {\r\n                        submitData.answer3 =  $('.thirdCardSelected').attr('id');\r\n                    }\r\n                    submitData.playerID = user.id;\r\n                    submitData.playerName = user.name;\r\n                    submitData.numAnswers = eventData.numAnswers;\r\n                    sendEvent(\"submitAnswers\", submitData);\r\n\r\n                    //remove card\r\n                    removeCardsFromHand();\r\n                    $(this).removeClass('firstCardSelected secondCardSelected thirdCardSelected cardSelected');\r\n                    $('.answerButton').remove();\r\n                    $('.whitecard').unbind();\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction removeCardsFromHand() {\r\n    $('.cardSelected').each(function () {\r\n       $(this).parent().remove();\r\n    });\r\n    //update cards in hand for everyone\r\n    var eventData = new Object();\r\n    eventData.playerID = user.id;\r\n    eventData.cardsInHand = $('.myCardWrap').length;\r\n    sendEvent('updateCardsInHand',eventData);\r\n}\r\n\r\nfunction  updateCardsInHand(eventData) {\r\n    playerStore.each(function(playerRec){\r\n        if (playerRec.getData().id == eventData.playerID) {\r\n            playerRec.set('cardsInHand',eventData.cardsInHand);\r\n        }\r\n    });\r\n}\r\n\r\nfunction submitAnswers(eventData) {\r\n    numSubmissions++;\r\n    $('#sharedArea-body').append('<div id=\"'+eventData.playerID+'\" class=\"answerContainer\" style=\"float:left\" data-numanswers=\"'+eventData.numAnswers+'\"><div id=\"'+eventData.answer+'\" class=\"whitecard card answer\" data-playerName=\"'+eventData.playerName+'\" data-playerID=\"'+eventData.playerID+'\"><div class=\"cardtext\"></div></div></div>');\r\n    if (eventData.numAnswers >= 2) {\r\n        $('#'+eventData.playerID).append('<div id=\"'+eventData.answer2+'\" class=\"whitecard card answer\" data-playerName=\"'+eventData.playerName+'\" data-playerid=\"'+eventData.playerID+'\"><div class=\"cardtext\"></div></div>');\r\n    }\r\n    if (eventData.numAnswers == 3) {\r\n        $('#'+eventData.playerID).append('<div id=\"'+eventData.answer3+'\" class=\"whitecard card answer\" data-playerName=\"'+eventData.playerName+'\" data-playerid=\"'+eventData.playerID+'\"><div class=\"cardtext\"></div></div>');\r\n    }\r\n}\r\n\r\nfunction revealCards() {\r\n    //instructions to reader\r\n    gapi.hangout.layout.displayNotice(\"Click a card to reveal it as you read it.\");\r\n\r\n    //show reader all the cards\r\n    $('.answer').each(function () {\r\n        //get card text\r\n        var cardRec = masterAnswerStore.findRecord('id', $(this).attr('id'), 0, false, false, true);\r\n        $(this).children('div:first').html(cardRec.getData().text);\r\n    });\r\n\r\n    //click reveals cards to other players\r\n    $('.answerContainer').click(function() {\r\n        if (!$(this).hasClass('revealedSet')) {\r\n            numRevealedSubmissions++;\r\n\r\n            //send event to reveal to players\r\n            var eventData = new Object(); eventData.containerID = $(this).attr('id');\r\n            eventData.numAnswers = $(this).attr('data-numanswers');\r\n            eventData.answer = $(this).children('div:first').attr('id');\r\n            if ($(this).attr('data-numanswers')>=2) {\r\n                eventData.answer2 = $(this).children('div:nth-child(2)').attr('id');\r\n            }\r\n            if ($(this).attr('data-numanswers')==3) {\r\n                eventData.answer3 = $(this).children('div:nth-child(3)').attr('id');\r\n            }\r\n            sendEvent('readCard',eventData);\r\n\r\n            $(this).addClass('revealedSet');\r\n            //if all are reveal give ability to choose\r\n            if (numRevealedSubmissions == numSubmissions) {\r\n                $('.revealedSet').wrap('<div class=\"chooseWrap\" style=\"float: left\"></div>');\r\n                $('.chooseWrap').append('<button class=\"chooseAnswerButton\" type=\"button\">Winner</button>');\r\n\r\n                //choosing a winner\r\n                $('.chooseAnswerButton').click(function() {\r\n                    //event for winner chosen\r\n                    var eventData = new Object();\r\n                    eventData.playerID = $(this).parent().children('div:first').children('div:first').attr('data-playerid');\r\n                    eventData.playerName = $(this).parent().children('div:first').children('div:first').attr('data-playername');\r\n                    sendEvent(\"winnerPicked\", eventData);\r\n\r\n                    //remove winner buttons\r\n                    $('.chooseAnswerButton').remove();\r\n                });\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nfunction readCard(eventData) {\r\n    //only show to the players (reader already sees it)\r\n    if (user.id != reader.id) {\r\n        //get card text\r\n        var cardRec = masterAnswerStore.findRecord('id', eventData.answer, 0, false, false, true);\r\n        $('#'+eventData.answer).children('div:first').html(cardRec.getData().text);\r\n        if (eventData.numAnswers>=2) {\r\n            var cardRec = masterAnswerStore.findRecord('id', eventData.answer2, 0, false, false, true);\r\n            $('#'+eventData.answer2).children('div:first').html(cardRec.getData().text);\r\n        }\r\n        if (eventData.numAnswers==3) {\r\n            var cardRec = masterAnswerStore.findRecord('id', eventData.answer3, 0, false, false, true);\r\n            $('#'+eventData.answer3).children('div:first').html(cardRec.getData().text);\r\n        }\r\n    }\r\n}\r\n\r\nfunction winnerPicked(eventData) {\r\n    var playerRecord = playerStore.findRecord(\"id\", eventData.playerID, 0, false, false, true);\r\n    var points = playerRecord.get('points');\r\n    points++;\r\n    playerRecord.set('points',points);\r\n\r\n    //add winner class\r\n    $('#'+eventData.playerID).addClass('winner');\r\n\r\n    //cleanup shared area for both reader and players\r\n\r\n    $('.answerContainer').each(function () {\r\n        if (!$(this).hasClass('winner')) {\r\n            $(this).remove();\r\n        }\r\n    });\r\n\r\n    //check winner\r\n    if (points>= winningPoints) {\r\n        gapi.hangout.layout.displayNotice(eventData.playerName + \" has won the game!\");\r\n        //switch feed to winner\r\n        var winnerFeed = gapi.hangout.layout.createParticipantVideoFeed(playerRecord.get('participantID'));\r\n        videoCanvas.setVideoFeed(winnerFeed);\r\n        readerVideoWindow.setTitle('Game Winner: ' + eventData.playerName);\r\n\r\n        //play sound\r\n        winnerSound.play();\r\n\r\n        //center window and make it bigger\r\n        readerVideoWindow.center(); readerVideoWindow.setSize(500,300);\r\n        if (user.id == eventData.playerID) {\r\n            console.log(\"Pancakes should go here!\");\r\n            var pancakes = gapi.hangout.av.effects.createImageResource('https://tabletopforge.com/CAH/img/winner_pancake.png');\r\n            overlay = pancakes.showFaceTrackingOverlay({\r\n                'trackingFeature': gapi.hangout.av.effects.FaceTrackingFeature.NOSE_ROOT,\r\n                'scaleWithFace': true,\r\n                'rotateWithFace': true,\r\n                'offset': {x: 0, y:0},\r\n                'scale': 2.0});\r\n        }\r\n\r\n        resetGame();\r\n\r\n    } //continue round\r\n    else {\r\n        gapi.hangout.layout.displayNotice(eventData.playerName + \" has won the point.\");\r\n        var winnerFeed = gapi.hangout.layout.createParticipantVideoFeed(playerRecord.get('participantID'));\r\n        videoCanvas.setVideoFeed(winnerFeed);\r\n        readerVideoWindow.setTitle('Gloat cam: ' + eventData.playerName);\r\n\r\n        //let round winner gloat for 5 seconds\r\n        setTimeout(function(){\r\n            //cleanup\r\n            $('.blackcard').remove();\r\n            $('.chooseWrap').remove();\r\n            $('.winner').remove();\r\n\r\n            //pick new reader\r\n            advanceReader();\r\n        },5000);\r\n\r\n    }\r\n}\r\n\r\nfunction advanceReader() {\r\n    //try and catch new/left players\r\n    updateParticipantsList();\r\n    if (user.id == reader.id) {\r\n        if (readerIndex < numPlayers-1) {\r\n            readerIndex++;\r\n        }\r\n        else {\r\n            readerIndex = 0;\r\n        }\r\n\r\n        reader = playerStore.getAt(readerIndex).getData();\r\n        var eventData = new Object();\r\n        eventData.reader = reader;\r\n        eventData.readerIndex = readerIndex;\r\n        sendEvent('setReader',eventData);\r\n\r\n        enableReaderHand();\r\n    }\r\n}\r\n\r\nfunction resetGame() {\r\n    //enable start game button\r\n    Ext.getCmp('startGameButton').show();\r\n    Ext.getCmp('goalDisplay').hide();\r\n\r\n    //cleanup\r\n    $('.blackcard').remove();\r\n    $('.chooseWrap').remove();\r\n    $('.winner').remove();\r\n    $('.answerContainer').remove();\r\n\r\n    $('.myCardWrap').remove();\r\n    removeCardsFromHand();\r\n\r\n    gameStarted = false;\r\n\r\n    clearPoints();\r\n    Ext.getCmp('turnCounter').setValue(0);\r\n\r\n    //try and catch new/left players\r\n    updateParticipantsList();\r\n}"]],"start1":0,"start2":0,"length1":0,"length2":24701}]],"length":24701}
